(window.webpackJsonp=window.webpackJsonp||[]).push([[581],{986:function(t,s,a){"use strict";a.r(s);var n=a(30),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"nodejs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodejs"}},[t._v("#")]),t._v(" nodeJS")]),t._v(" "),a("h2",{attrs:{id:"一、nodejs可以做什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、nodejs可以做什么"}},[t._v("#")]),t._v(" 一、nodeJS可以做什么")]),t._v(" "),a("ol",[a("li",[t._v("轻量级、高性能的web服务")]),t._v(" "),a("li",[t._v("前后端JavaScript同构开发")]),t._v(" "),a("li",[t._v("便捷高效的前端工程化")])]),t._v(" "),a("h2",{attrs:{id:"二、nodejs的架构和运行过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、nodejs的架构和运行过程"}},[t._v("#")]),t._v(" 二、Nodejs的架构和运行过程")]),t._v(" "),a("p",[t._v("分为以下四层结构：")]),t._v(" "),a("p",[t._v("Natives modules")]),t._v(" "),a("p",[t._v("Node c/c++ Bindings")]),t._v(" "),a("p",[t._v("v8、libuv 、c-ares(DNS)、 http parser、zlib（compression）、 ...")]),t._v(" "),a("p",[t._v("CPU / RAM / DISK / OS")]),t._v(" "),a("h2",{attrs:{id:"三、nodejs异步io和事件驱动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、nodejs异步io和事件驱动"}},[t._v("#")]),t._v(" 三、nodejs异步IO和事件驱动")]),t._v(" "),a("p",[t._v("（服务员点餐，只需要一个服务员去服务所有客户。多线程需要多个服务员等待客户点餐）")]),t._v(" "),a("p",[t._v("Reactor模式（应答者模式），单线程完成多线程工作。")]),t._v(" "),a("p",[t._v("Reactor模式下实现异步IO、事件驱动。Nodejs更使用于IO密集型高并发请求。不适合大量任务立即执行(非IO)的,大量复杂的业务。")]),t._v(" "),a("p",[t._v("​\t\t"),a("strong",[t._v("NodeJS异步IO")])]),t._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5Chujia%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211110192940871.png",alt:"image-20211110192940871"}})]),t._v(" "),a("p",[t._v("​\t\t对于其他语言，系统并不知道异步是否完成，那么系统可以重复调用IO操作，判断IO是否结束，那么这就是轮询，常见轮询技术有：read、select、poll、kqueue、event ports，但这些对于代码而言还是同步的效果。")]),t._v(" "),a("p",[t._v("​\t\t针对上面说法，我们期望的是实现无需主动判断的非阻塞IO，那么nodejs中的libuv库就实现了这个期望。")]),t._v(" "),a("p",[t._v("​\t\tnode中通过events模块的发布订阅模式进行事件驱动")]),t._v(" "),a("h2",{attrs:{id:"四、nodejs单线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、nodejs单线程"}},[t._v("#")]),t._v(" 四、Nodejs单线程")]),t._v(" "),a("p",[t._v("​\t\t单线程如何实现高并发？ 通过异步非阻塞IO配合事件回调通知实现。")]),t._v(" "),a("p",[t._v("​\t\tnodejs的单线程这个说法的意思是：nodejs主线程是单线程。")]),t._v(" "),a("p",[t._v("​\t\t单线程处理cpu密集任务时，则会有缺点，会出现阻塞的现象。")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" http "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模拟阻塞")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleepTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sleep "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("time"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleepTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" server "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'服务启动了'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 延迟了4秒执行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("h2",{attrs:{id:"五、nodejs应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、nodejs应用场景"}},[t._v("#")]),t._v(" 五、Nodejs应用场景")]),t._v(" "),a("p",[t._v("1、作为中间层")]),t._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5Chujia%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211110200050101.png",alt:"image-20211110200050101"}})]),t._v(" "),a("p",[t._v("2、操作数据库提供API服务")]),t._v(" "),a("p",[t._v("3、实时的聊天应用程序")]),t._v(" "),a("p",[t._v("4、nodejs更加适合IO密集型任务。不适合大量业务逻辑，计算能力不是它的特色。")])])}),[],!1,null,null,null);s.default=e.exports}}]);